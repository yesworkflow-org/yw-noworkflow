
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'EmphasizedHelloWorld', 'EmphasizedHelloWorld', 1, 20).
program(2, 'emphasize_greeting', 'EmphasizedHelloWorld.emphasize_greeting', 6, 11).
program(3, 'print_greeting', 'EmphasizedHelloWorld.print_greeting', 12, 19).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'provided_greeting', 'EmphasizedHelloWorld<-provided_greeting', 3, 1).
port(2, 'out', 'displayed_greeting', 'EmphasizedHelloWorld->displayed_greeting', 4, 2).
port(3, 'in', 'provided_greeting', 'EmphasizedHelloWorld.emphasize_greeting<-provided_greeting', 8, 3).
port(4, 'out', 'greeting', 'EmphasizedHelloWorld.emphasize_greeting->greeting', 9, 4).
port(5, 'in', 'greeting', 'EmphasizedHelloWorld.print_greeting<-greeting', 14, 4).
port(6, 'out', 'greeting', 'EmphasizedHelloWorld.print_greeting->greeting', 16, 5).

% FACT: port_alias(port_id, alias).
port_alias(4, 'modified_greeting').
port_alias(5, 'modified_greeting').
port_alias(6, 'displayed_greeting').

% FACT: port_uri_template(port_id, uri).
port_uri_template(6, 'stream:stdout').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 3).
has_in_port(3, 5).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(2, 4).
has_out_port(3, 6).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'provided_greeting', '[provided_greeting]').
data(2, 'displayed_greeting', '[displayed_greeting]').
data(3, 'provided_greeting', 'EmphasizedHelloWorld[provided_greeting]').
data(4, 'modified_greeting', 'EmphasizedHelloWorld[modified_greeting]').
data(5, 'displayed_greeting', 'EmphasizedHelloWorld[displayed_greeting]').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 3).
channel(3, 4).
channel(4, 1).
channel(5, 5).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(6, 1).
port_connects_to_channel(3, 2).
port_connects_to_channel(4, 3).
port_connects_to_channel(5, 3).
port_connects_to_channel(3, 4).
port_connects_to_channel(6, 5).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(1, 4).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(2, 1).
outflow_connects_to_channel(2, 5).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
